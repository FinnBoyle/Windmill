{"type":"node","id":"0","labels":["Implementation"],"properties":{"id":"JSONPayloadsImpl","commit_hash":"3e3831c3bb9e3edf9b4e80dd4e9ec89f5b89885a"}}
{"type":"node","id":"1","labels":["Implementation"],"properties":{"id":"JSONPayloadFix","commit_hash":"db65d60bdca2b23acc16787a1d1ad636e4f42710"}}
{"type":"node","id":"2","labels":["Requirement"],"properties":{"description":"I want the wind turbine to use a stepper motor to point to the optimal direction","id":"StepperMotor"}}
{"type":"node","id":"3","labels":["Standard"],"properties":{"journal":"IEC61400","description":"Control functions may govern or limit parameters such as rotor speed and alignment to the wind","id":"ControlFunctions"}}
{"type":"node","id":"4","labels":["Requirement"],"properties":{"description":"I want the windmill to be oriented in the optimum direction","id":"Orientation"}}
{"type":"node","id":"5","labels":["Requirement"],"properties":{"description":"I want to use an ESP8266 to connect to WiFi","id":"ESP8266"}}
{"type":"node","id":"6","labels":["Requirement"],"properties":{"description":"I want settings to be saved between turbine controller reboots and when power is lost\n","id":"PersistSettings"}}
{"type":"node","id":"7","labels":["Requirement"],"properties":{"description":"I want the windmill to be controlled by a ubiquitous computer","id":"UbiquitousComputer"}}
{"type":"node","id":"8","labels":["Requirement"],"properties":{"description":"I want the controller to use arduino SDK","id":"ArduinoSDK\n"}}
{"type":"node","id":"9","labels":["Requirement"],"properties":{"description":"I want to use the Arduino Uno microcontroller","id":"ArduinoUno"}}
{"type":"node","id":"10","labels":["Requirement"],"properties":{"description":"I want to control and read turbine orientation settings from the Arduino Uno on my wireless device","id":"WifiConnection"}}
{"type":"node","id":"11","labels":["Implementation"],"properties":{"id":"WifiConnectionImpl","commit_hash":"3e3831c3bb9e3edf9b4e80dd4e9ec89f5b89885a"}}
{"type":"node","id":"12","labels":["Implementation"],"properties":{"id":"PersistSettingsImpl","commit_hash":"cf9f21f029b92799bb7c85b960ecaaf8590e9af6"}}
{"type":"node","id":"13","labels":["Requirement"],"properties":{"description":"I want to use a web browser to control the orientation of my turbine","id":"ReactClient"}}
{"type":"node","id":"14","labels":["Requirement"],"properties":{"description":"I want a lightweight protocol to be used for communications from the ESP8266","id":"MQTTProtocol"}}
{"type":"node","id":"15","labels":["Requirement"],"properties":{"description":"I want a web server to store and process data from the MQTT communications for React to consume.","id":"NodeServer"}}
{"type":"node","id":"16","labels":["Requirement"],"properties":{"description":"I want a react control panel page to communicate with the Arduino Uno microcontroller that can change the orientation of the turbine.","id":"RemoteControlsReact"}}
{"type":"node","id":"17","labels":["Implementation"],"properties":{"id":"RemoteControlsReact","commit_hash":"3e3831c3bb9e3edf9b4e80dd4e9ec89f5b89885a"}}
{"type":"node","id":"18","labels":["Requirement"],"properties":{"description":"I want the control panel to have a tabular format separate the controls into categories","id":"TabularControls"}}
{"type":"node","id":"19","labels":["Requirement"],"properties":{"description":"I want a chart to view PID results on the react control page","id":"PIDChart"}}
{"type":"node","id":"20","labels":["Requirement"],"properties":{"description":"I want to generate fake PID data for testing without real input voltage or calculations","id":"FakePIDData"}}
{"type":"node","id":"21","labels":["Implementation"],"properties":{"id":"FakePIDImpl","commit_hash":"cf9f21f029b92799bb7c85b960ecaaf8590e9af6"}}
{"type":"node","id":"22","labels":["Implementation"],"properties":{"id":"TabularControls","commit_hash":"6c0e21d6fe61a5d72db03b2d1a51bcdc9785cf3c"}}
{"type":"node","id":"23","labels":["Requirement"],"properties":{"description":"I want to serialize all communications in JSON payloads","id":"JSONPayloads"}}
{"type":"node","id":"24","labels":["Requirement"],"properties":{"description":"I want to view a table of all WiFi connected turbines and a summary of their metrics","id":"TurbineMetricsTable"}}
{"type":"node","id":"25","labels":["Requirement"],"properties":{"description":"I want to view memory usage of the turbines Arduino Uno on the metrics table for debugging purposes ","id":"MemoryUsageMetrics"}}
{"type":"node","id":"26","labels":["Requirement"],"properties":{"description":"I want to use a PID algorithm to determine the optimal orientation of the wind turbine","id":"PIDAlgorithm"}}
{"type":"node","id":"27","labels":["Requirement"],"properties":{"description":"I want to read voltage from the generator into the arduino","id":"InputVoltage"}}
{"type":"node","id":"28","labels":["Implementation"],"properties":{"id":"StepperMotorImpl","commit_hash":"d259023a7e6f10cc8839269b55ef9d9525f543c6"}}
{"type":"node","id":"29","labels":["Requirement"],"properties":{"description":"I want to detect uptrends in PID error and reverse direction accordingly","id":"ReverseDirection"}}
{"type":"node","id":"30","labels":["Requirement"],"properties":{"description":"I want to use oscillations to detect an optimal center point","id":"OptimalDirection"}}
{"type":"node","id":"31","labels":["Implementation"],"properties":{"id":"OptimalDirectionImpl","commit_hash":"d8c67963fca136955e7a06f9106ea25de047e2be"}}
{"type":"relationship","id":"0","label":"DRIVES","start":{"id":"3","labels":["Standard"],"properties":{"journal":"IEC61400","description":"Control functions may govern or limit parameters such as rotor speed and alignment to the wind","id":"ControlFunctions"}},"end":{"id":"4","labels":["Requirement"],"properties":{"description":"I want the windmill to be oriented in the optimum direction","id":"Orientation"}}}
{"type":"relationship","id":"1","label":"SUB_REQ","start":{"id":"4","labels":["Requirement"],"properties":{"description":"I want the windmill to be oriented in the optimum direction","id":"Orientation"}},"end":{"id":"7","labels":["Requirement"],"properties":{"description":"I want the windmill to be controlled by a ubiquitous computer","id":"UbiquitousComputer"}}}
{"type":"relationship","id":"2","label":"SUB_REQ","start":{"id":"4","labels":["Requirement"],"properties":{"description":"I want the windmill to be oriented in the optimum direction","id":"Orientation"}},"end":{"id":"2","labels":["Requirement"],"properties":{"description":"I want the wind turbine to use a stepper motor to point to the optimal direction","id":"StepperMotor"}}}
{"type":"relationship","id":"3","label":"IMPLEMENTED_AS","start":{"id":"20","labels":["Requirement"],"properties":{"description":"I want to generate fake PID data for testing without real input voltage or calculations","id":"FakePIDData"}},"end":{"id":"21","labels":["Implementation"],"properties":{"id":"FakePIDImpl","commit_hash":"cf9f21f029b92799bb7c85b960ecaaf8590e9af6"}}}
{"type":"relationship","id":"4","label":"SUB_REQ","start":{"id":"7","labels":["Requirement"],"properties":{"description":"I want the windmill to be controlled by a ubiquitous computer","id":"UbiquitousComputer"}},"end":{"id":"8","labels":["Requirement"],"properties":{"description":"I want the controller to use arduino SDK","id":"ArduinoSDK\n"}}}
{"type":"relationship","id":"5","label":"SUB_REQ","start":{"id":"8","labels":["Requirement"],"properties":{"description":"I want the controller to use arduino SDK","id":"ArduinoSDK\n"}},"end":{"id":"9","labels":["Requirement"],"properties":{"description":"I want to use the Arduino Uno microcontroller","id":"ArduinoUno"}}}
{"type":"relationship","id":"6","label":"SUB_REQ","start":{"id":"9","labels":["Requirement"],"properties":{"description":"I want to use the Arduino Uno microcontroller","id":"ArduinoUno"}},"end":{"id":"10","labels":["Requirement"],"properties":{"description":"I want to control and read turbine orientation settings from the Arduino Uno on my wireless device","id":"WifiConnection"}}}
{"type":"relationship","id":"7","label":"IMPLEMENTED_AS","start":{"id":"10","labels":["Requirement"],"properties":{"description":"I want to control and read turbine orientation settings from the Arduino Uno on my wireless device","id":"WifiConnection"}},"end":{"id":"11","labels":["Implementation"],"properties":{"id":"WifiConnectionImpl","commit_hash":"3e3831c3bb9e3edf9b4e80dd4e9ec89f5b89885a"}}}
{"type":"relationship","id":"8","label":"SUB_REQ","start":{"id":"10","labels":["Requirement"],"properties":{"description":"I want to control and read turbine orientation settings from the Arduino Uno on my wireless device","id":"WifiConnection"}},"end":{"id":"5","labels":["Requirement"],"properties":{"description":"I want to use an ESP8266 to connect to WiFi","id":"ESP8266"}}}
{"type":"relationship","id":"9","label":"SUB_REQ","start":{"id":"5","labels":["Requirement"],"properties":{"description":"I want to use an ESP8266 to connect to WiFi","id":"ESP8266"}},"end":{"id":"6","labels":["Requirement"],"properties":{"description":"I want settings to be saved between turbine controller reboots and when power is lost\n","id":"PersistSettings"}}}
{"type":"relationship","id":"10","label":"IMPLEMENTED_AS","start":{"id":"6","labels":["Requirement"],"properties":{"description":"I want settings to be saved between turbine controller reboots and when power is lost\n","id":"PersistSettings"}},"end":{"id":"12","labels":["Implementation"],"properties":{"id":"PersistSettingsImpl","commit_hash":"cf9f21f029b92799bb7c85b960ecaaf8590e9af6"}}}
{"type":"relationship","id":"11","label":"SUB_REQ","start":{"id":"10","labels":["Requirement"],"properties":{"description":"I want to control and read turbine orientation settings from the Arduino Uno on my wireless device","id":"WifiConnection"}},"end":{"id":"13","labels":["Requirement"],"properties":{"description":"I want to use a web browser to control the orientation of my turbine","id":"ReactClient"}}}
{"type":"relationship","id":"12","label":"SUB_REQ","start":{"id":"5","labels":["Requirement"],"properties":{"description":"I want to use an ESP8266 to connect to WiFi","id":"ESP8266"}},"end":{"id":"14","labels":["Requirement"],"properties":{"description":"I want a lightweight protocol to be used for communications from the ESP8266","id":"MQTTProtocol"}}}
{"type":"relationship","id":"13","label":"SUB_REQ","start":{"id":"13","labels":["Requirement"],"properties":{"description":"I want to use a web browser to control the orientation of my turbine","id":"ReactClient"}},"end":{"id":"15","labels":["Requirement"],"properties":{"description":"I want a web server to store and process data from the MQTT communications for React to consume.","id":"NodeServer"}}}
{"type":"relationship","id":"14","label":"SUB_REQ","start":{"id":"14","labels":["Requirement"],"properties":{"description":"I want a lightweight protocol to be used for communications from the ESP8266","id":"MQTTProtocol"}},"end":{"id":"15","labels":["Requirement"],"properties":{"description":"I want a web server to store and process data from the MQTT communications for React to consume.","id":"NodeServer"}}}
{"type":"relationship","id":"15","label":"SUB_REQ","start":{"id":"15","labels":["Requirement"],"properties":{"description":"I want a web server to store and process data from the MQTT communications for React to consume.","id":"NodeServer"}},"end":{"id":"16","labels":["Requirement"],"properties":{"description":"I want a react control panel page to communicate with the Arduino Uno microcontroller that can change the orientation of the turbine.","id":"RemoteControlsReact"}}}
{"type":"relationship","id":"16","label":"IMPLEMENTED_AS","start":{"id":"16","labels":["Requirement"],"properties":{"description":"I want a react control panel page to communicate with the Arduino Uno microcontroller that can change the orientation of the turbine.","id":"RemoteControlsReact"}},"end":{"id":"17","labels":["Implementation"],"properties":{"id":"RemoteControlsReact","commit_hash":"3e3831c3bb9e3edf9b4e80dd4e9ec89f5b89885a"}}}
{"type":"relationship","id":"17","label":"SUB_REQ","start":{"id":"16","labels":["Requirement"],"properties":{"description":"I want a react control panel page to communicate with the Arduino Uno microcontroller that can change the orientation of the turbine.","id":"RemoteControlsReact"}},"end":{"id":"19","labels":["Requirement"],"properties":{"description":"I want a chart to view PID results on the react control page","id":"PIDChart"}}}
{"type":"relationship","id":"18","label":"SUB_REQ","start":{"id":"16","labels":["Requirement"],"properties":{"description":"I want a react control panel page to communicate with the Arduino Uno microcontroller that can change the orientation of the turbine.","id":"RemoteControlsReact"}},"end":{"id":"18","labels":["Requirement"],"properties":{"description":"I want the control panel to have a tabular format separate the controls into categories","id":"TabularControls"}}}
{"type":"relationship","id":"19","label":"SUB_REQ","start":{"id":"19","labels":["Requirement"],"properties":{"description":"I want a chart to view PID results on the react control page","id":"PIDChart"}},"end":{"id":"20","labels":["Requirement"],"properties":{"description":"I want to generate fake PID data for testing without real input voltage or calculations","id":"FakePIDData"}}}
{"type":"relationship","id":"20","label":"IMPLEMENTED_AS","start":{"id":"18","labels":["Requirement"],"properties":{"description":"I want the control panel to have a tabular format separate the controls into categories","id":"TabularControls"}},"end":{"id":"22","labels":["Implementation"],"properties":{"id":"TabularControls","commit_hash":"6c0e21d6fe61a5d72db03b2d1a51bcdc9785cf3c"}}}
{"type":"relationship","id":"21","label":"SUB_REQ","start":{"id":"15","labels":["Requirement"],"properties":{"description":"I want a web server to store and process data from the MQTT communications for React to consume.","id":"NodeServer"}},"end":{"id":"23","labels":["Requirement"],"properties":{"description":"I want to serialize all communications in JSON payloads","id":"JSONPayloads"}}}
{"type":"relationship","id":"22","label":"IMPLEMENTED_AS","start":{"id":"23","labels":["Requirement"],"properties":{"description":"I want to serialize all communications in JSON payloads","id":"JSONPayloads"}},"end":{"id":"0","labels":["Implementation"],"properties":{"id":"JSONPayloadsImpl","commit_hash":"3e3831c3bb9e3edf9b4e80dd4e9ec89f5b89885a"}}}
{"type":"relationship","id":"23","label":"IMPLEMENTED_AS","start":{"id":"0","labels":["Implementation"],"properties":{"id":"JSONPayloadsImpl","commit_hash":"3e3831c3bb9e3edf9b4e80dd4e9ec89f5b89885a"}},"end":{"id":"1","labels":["Implementation"],"properties":{"id":"JSONPayloadFix","commit_hash":"db65d60bdca2b23acc16787a1d1ad636e4f42710"}}}
{"type":"relationship","id":"24","label":"SUB_REQ","start":{"id":"16","labels":["Requirement"],"properties":{"description":"I want a react control panel page to communicate with the Arduino Uno microcontroller that can change the orientation of the turbine.","id":"RemoteControlsReact"}},"end":{"id":"24","labels":["Requirement"],"properties":{"description":"I want to view a table of all WiFi connected turbines and a summary of their metrics","id":"TurbineMetricsTable"}}}
{"type":"relationship","id":"25","label":"SUB_REQ","start":{"id":"9","labels":["Requirement"],"properties":{"description":"I want to use the Arduino Uno microcontroller","id":"ArduinoUno"}},"end":{"id":"27","labels":["Requirement"],"properties":{"description":"I want to read voltage from the generator into the arduino","id":"InputVoltage"}}}
{"type":"relationship","id":"26","label":"SUB_REQ","start":{"id":"2","labels":["Requirement"],"properties":{"description":"I want the wind turbine to use a stepper motor to point to the optimal direction","id":"StepperMotor"}},"end":{"id":"26","labels":["Requirement"],"properties":{"description":"I want to use a PID algorithm to determine the optimal orientation of the wind turbine","id":"PIDAlgorithm"}}}
{"type":"relationship","id":"27","label":"SUB_REQ","start":{"id":"27","labels":["Requirement"],"properties":{"description":"I want to read voltage from the generator into the arduino","id":"InputVoltage"}},"end":{"id":"26","labels":["Requirement"],"properties":{"description":"I want to use a PID algorithm to determine the optimal orientation of the wind turbine","id":"PIDAlgorithm"}}}
{"type":"relationship","id":"28","label":"IMPLEMENTED_AS","start":{"id":"2","labels":["Requirement"],"properties":{"description":"I want the wind turbine to use a stepper motor to point to the optimal direction","id":"StepperMotor"}},"end":{"id":"28","labels":["Implementation"],"properties":{"id":"StepperMotorImpl","commit_hash":"d259023a7e6f10cc8839269b55ef9d9525f543c6"}}}
{"type":"relationship","id":"29","label":"SUB_REQ","start":{"id":"26","labels":["Requirement"],"properties":{"description":"I want to use a PID algorithm to determine the optimal orientation of the wind turbine","id":"PIDAlgorithm"}},"end":{"id":"29","labels":["Requirement"],"properties":{"description":"I want to detect uptrends in PID error and reverse direction accordingly","id":"ReverseDirection"}}}
{"type":"relationship","id":"30","label":"SUB_REQ","start":{"id":"29","labels":["Requirement"],"properties":{"description":"I want to detect uptrends in PID error and reverse direction accordingly","id":"ReverseDirection"}},"end":{"id":"30","labels":["Requirement"],"properties":{"description":"I want to use oscillations to detect an optimal center point","id":"OptimalDirection"}}}
{"type":"relationship","id":"31","label":"IMPLEMENTED_AS","start":{"id":"30","labels":["Requirement"],"properties":{"description":"I want to use oscillations to detect an optimal center point","id":"OptimalDirection"}},"end":{"id":"31","labels":["Implementation"],"properties":{"id":"OptimalDirectionImpl","commit_hash":"d8c67963fca136955e7a06f9106ea25de047e2be"}}}